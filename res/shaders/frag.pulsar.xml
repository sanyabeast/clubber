<uniforms>
	<item type="vec3"  name="centerColor"></item>
	<item type="vec3"  name="rippleColor"></item>
	<item type="float" name="centerOpacity"></item>
	<item type="float" name="rippleOpacity"></item>
	<item type="float"  name="timeUniform"></item>
</uniforms>
<varyings>
	<item type="vec2" name="vUv"></item>
</varyings>
<program name="pulsar">	

/*
	c1to = circle 1 timme offset;
	c1t = circle 1 time
	c1r = circle 1 radius
	c1s = circle 1 speed, lower = faster
	c1o = circel 1 opacity

	cc = central circle
*/

vec4 pulsar(){
	float thickness = 0.01;
	float scaleFactor = 4.0;
	float centralCircleRadius = 0.08;

	vec4 color = vec4(0.0, 0.0, 0.0, 0.0);


	/*ripple 1*/
	float c1to = 0.0;
	float c1s = 2.0;
	float c1t = (mod(timeUniform + c1to, c1s) / c1s / scaleFactor);
	float c1r = sqrt(pow(vUv.y - 0.5, 2.0) + pow(vUv.x - 0.5, 2.0));
	float c1o = 1.0 - (c1t * scaleFactor);

	if ((c1r) >= (c1t - thickness) && (c1r) <= (c1t + thickness)){
		color = vec4(rippleColor, c1o * rippleOpacity / 1.5);
	}

	/*ripple 2*/
	float c2to = 0.8;
	float c2s = 2.0;
	float c2t = (mod(timeUniform + c2to, c2s) / c2s / scaleFactor);
	float c2r = sqrt(pow(vUv.y - 0.5, 2.0) + pow(vUv.x - 0.5, 2.0));
	float c2o = 1.0 - (c2t * scaleFactor);

	if ((c2r) >= (c2t - thickness) && (c2r) <= (c2t + thickness)){
		color = vec4(rippleColor, c2o * rippleOpacity / 1.5);
	}

	/*ripple 3*/
	float c3to = 1.2;
	float c3s = 2.0;
	float c3t = (mod(timeUniform + c3to, c3s) / c3s / scaleFactor);
	float c3r = sqrt(pow(vUv.y - 0.5, 2.0) + pow(vUv.x - 0.5, 2.0));
	float c3o = 1.0 - (c3t * scaleFactor);

	if ((c3r) >= (c3t - thickness) && (c3r) <= (c3t + thickness)){
		color = vec4(rippleColor, c3o * rippleOpacity / 1.5);
	}

	/*central circle*/
	float ccr = sqrt(pow(vUv.y - 0.5, 2.0) + pow(vUv.x - 0.5, 2.0));

	if ((ccr) <= centralCircleRadius){
		color = vec4(centerColor, centerOpacity - sin((mod(timeUniform / 2., 1.) * 3.14)) / 1.5);
	}


	return(color);
}
</program>
